name: Deploy to ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-west-2
  ECR_FRONTEND_REPOSITORY: my-app-frontend
  ECR_BACKEND_REPOSITORY: my-app-backend
  ECS_CLUSTER: my-app-cluster
  ECS_FRONTEND_SERVICE: frontend-service
  ECS_BACKEND_SERVICE: backend-service

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ env.ECR_FRONTEND_REPOSITORY }} ./react-frontend
          docker tag ${{ env.ECR_FRONTEND_REPOSITORY }}:latest ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_FRONTEND_REPOSITORY }}:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_FRONTEND_REPOSITORY }}:latest

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ env.ECR_BACKEND_REPOSITORY }} ./backend
          docker tag ${{ env.ECR_BACKEND_REPOSITORY }}:latest ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_BACKEND_REPOSITORY }}:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_BACKEND_REPOSITORY }}:latest

      - name: Deploy Frontend to ECS
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_FRONTEND_SERVICE }} --force-new-deployment --region ${{ env.AWS_REGION }}